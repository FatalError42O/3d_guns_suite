
This document contains the relevant documentation of Modlib's b3d library. 
(This is written with blender in mind)

B3D output format

the following is a review of the terminology and structure of the outputted b3d table from modlib.b3d.read()

The most head of the b3d structure is the *Node*.
A node is equivelant to a bone or mesh in blender

every b3d has a *root node* the name of this root node may vary, if you have only one mesh in your file (assuming all bones are parented) then this will simply be the name of the mesh in the collection. Otherwise, if there's multiple meshes, it will be given the name "ROOT", though this may not be very important.


1) Nodes
A node table's structure will look like the following (give or take): 

    (sometimes not all of these indexes will be seen in the root node, as they may not be needed for the node.)

    {
        Mesh = {...},
        Animation = {...},
        Scale = {...},
        Keys = {...},
        Children = { 
                       <===  Additional nodes would go here
        } ,
        Name = "ROOT" or (ex.) "object.001",
        Pos = {...},
        Rotation = {...}
    }
2) children
3) Meshes

    The mesh table contains all the information about the vertices and faces of a node/mesh object.
    If model is properly set up, nodes containing these meshes should either be the root node, or second to the root node if your file contained multiple unparented mesh objects on export.

    Mesh = {
        Vertices = {     -self explanitory, a list of vertices indexed by number. 
            {
                tex_coords = {x, y},  -coordinates of the vertex's texture
                pos = {x, y, z}
            }
            . . .
            texture_coordinates = int
            texture_coord_set_size = int
            flags = int
        }
        triangle_sets = {
            vertex_ids = {
                {x, y, z}  -vertice indexes, this represents one triangle
                . . .
            }
        }
        brush_id = int
    }
    

4) Animations and keyframes

    The animation table contains information about the speed and length of model's animation. This should only be seen at the top of a chain of nodes. 

    Animation = {
        frames = int  -number of frames
        fps = int
        flags = int
    }

    the key table contains a list of information for each frame, these are generally only found in nodes containing a bone.

    Key = {
        {
            rotation = {w, x, y z}  -this is in quanternions
            scale = {x, y, z}
            position = {x, y, z}
            frame = int             -this is the frame it
        }
    }

5) Scale



